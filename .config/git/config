# TIP: `update-index --test-untracked-cache`
# if OK, then
# `config set --global core.untrackedCache true`

# TIP: `config set feature.manyFiles true` where appropriate
# TIP: `sparse-checkout` as a last resort

[core]
	abbrev = 4

[credential "https://github.com"]
	helper =
	helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper =
	helper = !/usr/bin/gh auth git-credential
[user]
	name = Rudxain
	email = 76864299+Rudxain@users.noreply.github.com
	# NOTE: `config set commit.gpgSign true`
	# in repos that I don't own
	signingKey = 0DAC837DDEF8E96C

[help]
	autoCorrect = prompt

[alias]
	aliases = "!git config get --all --show-names --regexp '^alias\\.' | cut -c 7-"
	is-shallow = rev-parse --is-shallow-repository
	# https://github.blog/open-source/git/get-up-to-speed-with-partial-clone-and-shallow-clone
	# https://git-scm.com/docs/partial-clone
	# TIP: `rebase branch --reapply-cherry-picks`
	clon-lazy = clone --filter=blob:none
	# inspired by Rust ü¶Ä
	# ‚ö†Ô∏è WARN: DO NOT AMEND GRAFTED COMMITS!
	copy = clone --depth=1 --filter=tree:0 # shallow with sparse fetch
	co = checkout
	bc = switch -c
	cb = switch # change branch
	a = add
	aa = add -A # full WT
	ac = add . # current WD
	nuke = rm -rf --sparse --
	c = commit
	cs = commit -S
	ca = commit -av
	cas = commit -avS
	l = log --oneline
	lg = log --oneline --graph
	lp = log -p --color-words
	o = show --name-only
	oo = show --color-words
	d = diff --name-only
	dd = diff --color-words
	s = status -s
	ss = status
	statuses = branch -vv
	# for merge conflicts
	# see also: `diff --check` & `d --diff-filter=U`
	both-m = "!git status | grep '^\tboth modified:   ' | cut -c 19-"
	b = branch
	ba = branch -a
	tags = tag -l
	remotes = remote -v
	contributors = shortlog -sn
	# "garbage collection"
	bdm = "!git branch --merged | grep -vF '*' | xargs -rn1 git branch -d"
	rbi = "!r() { git rebase -i "HEAD~$1"; }; r"
	push-force = push --force-with-lease

[init]
	# solves racism across the entirety of space-time (/s):
	# https://sfconservancy.org/news/2020/jun/23/gitbranchname
	defaultBranch = main

[branch]
	sort = -committerdate # recent 1st

[color "branch"]
	current = reverse green
	local = green

[remote "origin"]
	# see `fetch`
	prune = true

[url "https://github.com/"]
	insteadOf = "gh:"

[status]
	showStash = true

[diff]
	renames = copies
[diff "bin"]
	textconv = hexdump -v -C

[log]
	date = iso

[merge]
	# summarize commits
	log = true
	conflictStyle = zdiff3

[rebase]
	missingCommitsCheck = error
	# for `fixup`s
	autoSquash = true
